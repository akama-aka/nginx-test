name: Build Nginx Server
run-name: ${{ github.actor }}
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup dependencies
        run: |
          sudo apt update
          sudo apt-get install -y build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev git perl curl ruby automake autoconf libtool autogen yajl-tools libcurlpp-dev liblua5.3 liblua5.3-dev libmaxminddb-dev  wget pcre2-utils
      - name: Clone headers-more-nginx-module
        run: git clone https://github.com/openresty/headers-more-nginx-module.git
      - name: Clone ModSecurity
        run: git clone --recursive https://github.com/owasp-modsecurity/ModSecurity.git
      - name: Clone ModSecurity-nginx
        run: git clone --depth 1 https://github.com/owasp-modsecurity/modsecurity-nginx.git
      - name: Clone OpenSSL
        run: git clone https://github.com/openssl/openssl.git
      - name: Clone PCRE2
        run: git clone https://github.com/PCRE2Project/pcre2.git
      - name: Clone yajl
        run: git clone https://github.com/lloyd/yajl.git
      - name: Clone nginx
        run: wget https://nginx.org/download/nginx-1.27.3.tar.gz
 #     - name: Clone afl
 #       run: git clone https://github.com/google/AFL.git
 #     - name: Clone afl++
 #       run: git clone https://github.com/AFLplusplus/AFLplusplus.git


#      - name: Install AFL
#        run: |
#          cd AFL
#          make
#          sudo make install
#      - name: Install AFLPlusPlus
#        run: |
##          cd AFLplusplus
#          CC=/usr/local/bin/afl-gcc make
#          sudo make install
      - name: Install YAJL
        run: |
          cd yajl
          ./configure
          make
          sudo make install
      - name: Install PCRE2
        run: |
          cd pcre2
          ./autogen.sh
          ./configure
          make
          sudo make install
      - name: Install ModSecurity
        run: |
          cd ModSecurity
          sudo ./build.sh
          git submodule init
          git submodule update
          sudo ./configure --enable-yajl --enable-pcre2
          sudo make
          sudo make install
      - name: Install NGINX
        run: |
          tar -xf nginx-1.27.3.tar.gz
          mv nginx-1.27.3 nginx
          cd nginx
          ./configure --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/lib/nginx/tmp/client_body --http-proxy-temp-path=/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path=/var/lib/nginx/tmp/scgi --pid-path=/run/nginx.pid --lock-path=/run/lock/subsys/nginx --user=nginx --group=nginx --with-compat --with-debug --with-file-aio --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module=dynamic --with-http_mp4_module --with-http_perl_module=dynamic --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_xslt_module=dynamic --with-mail=dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads --with-cc-opt='-O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -m64 -march=x86-64-v2 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection' --with-ld-opt='-Wl,-z,relro -Wl,--as-needed -Wl,-z,now -Wl,-E' --add-module=/opt/headers-more-nginx-module --add-dynamic-module=/opt/ModSecurity-nginx --with-openssl=/opt/openssl/ --with-http_v3_module --without-http_grpc_module
